function playVideo(e){if(video=$(e).find("video").get(0),!video)return!0;0<video.currentTime&&!video.paused&&!video.ended&&2<video.readyState||video.play()}function pauseVideo(e){if(video=$(e).find("video").get(0),!video)return!0;0<video.currentTime&&!video.paused&&!video.ended&&2<video.readyState&&video.pause()}function onScroll(e){var t=$(document).scrollTop();$("#secondNav li a").each(function(){var e=$(this),o=$(e.attr("href"));o.position().top-200<=t&&o.position().top+o.height()>t?(e.not(".active")&&($("#secondNav li a").removeClass("active"),e.addClass("active"),(e.offset().left<0||e.offset().left>$(window).width()-50)&&$("#secondNav").animate({scrollLeft:e.offset().left},300)),playVideo(o)):(e.removeClass("active"),pauseVideo(o))})}$(document).ready(function(){$("#nav-icon").click(function(){$(this).toggleClass("open"),$("#sidebarNav").toggleClass("open"),$("#PageOverlay").toggleClass("open"),$("body").toggleClass("open")}),$(document).on("scroll",onScroll),$('a[href^="#"]').on("click",function(e){e.preventDefault(),$("a").each(function(){$(this).removeClass("active")}),$(this).addClass("active");var o=this.hash,t=$(o);t.length&&$("html, body").stop().animate({scrollTop:t.offset().top},500,"swing",function(){window.location.hash=o})});var o=$(window).scrollTop();if($(window).scroll(function(){var e=$(this).scrollTop();e<0&&(e=0),o<e?$(".header, body").addClass("fixed"):$(".header, body").removeClass("fixed"),o=e}),$("#ourHistory").length){var e=$("#ourHistory .owl-carousel .carousel-content").length,i=$('#ourHistory input[type="range"]'),t=$("#ourHistory .owl-carousel"),s=!1,l=50*(e-1),r=function(e){return Math.round(e/50)};t.on("changed.owl.carousel initialized.owl.carousel",function(e){if(e.item){var o=e.item.index,t=e.item.count;t<=o?o-=t:o<0&&(o+=t),console.log("scrollto",o),r(i.val())==o||s||((a=50*(n=o))<0&&(a=0),l<a&&(a=l),$({val:i.val()}).animate({val:50*n},{duration:300,easing:"linear",step:function(e){i.val(Math.ceil(e))}}))}var n,a}),t.owlCarousel({loop:!1,margin:24,responsiveClass:!0,dots:!1,startPosition:1,responsive:{0:{items:1,nav:!0},500:{items:2,nav:!0},768:{items:3,nav:!0},980:{items:4,nav:!0}}}),i.prop("min",0),i.val(100),i.prop("max",l),i.on("change input",function(e){t.trigger("to.owl.carousel",[r($(this).val()),300])}),i.on("mousedown",function(e){s=!0}),i.on("mouseup",function(e){s=!1}),setTimeout(function(){t.trigger("to.owl.carousel",[e,1])},1)}var n=function(){$(".show-modal").removeClass("show-modal"),$("body").removeClass("no-scroll")};$(".trigger").on("click",function(){return function(e){console.log("modal open ",e);var o=$("#"+e);o.length&&($("body").addClass("no-scroll"),o.addClass("show-modal"))}($(this).data("target")),!1}),$(".close-button").on("click",function(){n()}),$("body").on("click",function(e){$(e.target).is(".modal")&&n()}),$('select[name="country_id"]').length&&$.get("/countries.json").done(function(e){$('select[name="country_id"]').each(function(){var t=$(this);$.each(e,function(e,o){t.append($("<option />").val(e).text(o))})})}),$("select").on("blur",function(){$(this).attr("value",$(this).val())})}),$(document).ready(function(){$("#modalFeedback form").on("submit",function(){var t=$(this);return t.find(".field").removeClass("error-block"),$.post(window.URL_FORM_FEEDBACK,$(this).serialize()).done(function(e){$("#modalFeedback .modal-header").html(""),$("#modalFeedback .modal-content").html('<p class="finish-text">Thank you for your feedback!</p>')}).fail(function(e){e.responseJSON&&$.each(e.responseJSON,function(e,o){t.find('[name="'+e+'"]').closest(".field").addClass("error-block").find("p").text(o.join(", "))})}),!1}),$("#modalStory form").on("submit",function(){var t=$(this);return t.find(".field").removeClass("error-block"),$.post(window.URL_FORM_STORY,$(this).serialize()).done(function(e){$("#modalStory .modal-header").html(""),$("#modalStory .modal-content").html('<p class="finish-text">Тhank you, your story has been sent!</p>')}).fail(function(e){e.responseJSON&&$.each(e.responseJSON,function(e,o){t.find('[name="'+e+'"]').closest(".field").addClass("error-block").find("p").text(o.join(", "))})}),!1}),$("#modalContact form").on("submit",function(){var t=$(this);return t.find(".field").removeClass("error-block"),$.post(window.URL_FORM_CONTACT,$(this).serialize()).done(function(e){$("#modalContact .modal-header").html(""),$("#modalContact .modal-content").html('<p class="finish-text">Тhank you, your story has been sent!</p>')}).fail(function(e){e.responseJSON&&$.each(e.responseJSON,function(e,o){t.find('[name="'+e+'"]').closest(".field").addClass("error-block").find("p").text(o.join(", "))})}),!1})}),$(document).ready(function(){size_li=$(".inf_scroll .inf_wrap").length,x=10,$(".inf_scroll .inf_wrap:lt("+x+")").fadeIn(),$("#loadMore").click(function(){x=x+10<=size_li?x+10:size_li,$(".inf_scroll .inf_wrap:lt("+x+")").fadeIn(),$(this).toggle(x<size_li)});document.addEventListener("invalid",function(e){$(e.target).addClass("invalid"),$("html, body").animate({scrollTop:$($(".invalid")[0]).offset().top-150},0)},!0),document.addEventListener("change",function(e){$(e.target).removeClass("invalid")},!0)}),$(document).ready(function(){var t="Read more";$(".more").each(function(){var e=$(this).html();if(327<e.length){var o=e.substr(0,327)+'<span class="moreellipses">...&nbsp;</span><span class="morecontent"><span>'+e.substr(327,e.length-327)+'</span><a href="" class="morelink">'+t+"</a></span>";$(this).html(o)}}),$(".morelink").click(function(){return $(this).hasClass("less")?($(this).removeClass("less"),$(this).html(t)):($(this).addClass("less"),$(this).html("Hide")),$(this).parent().prev().toggle(),$(this).prev().toggle(),!1})}),$(document).ready(function(){var e,o;$(".expand_all_toggle").on("click",function(){$(this).hasClass("open")?($(".acc_content").slideUp(),$(this).removeClass("open"),$(this).text("Expand all"),$(".acc_toggle").removeClass("active")):($(this).text("Collapse all"),$(".acc_content").slideDown(),$(this).addClass("open"),$(".acc_toggle").addClass("active"))}),e=jQuery,o=e(".acc_wrapper .acc_content").hide(),e(".acc_wrapper .acc_toggle.first").next().addClass("active").slideDown(),e(".acc_wrapper .acc_toggle").click(function(){return $this=e(this),$target=$this.next(),$target.hasClass("active")?($this.removeClass("active"),$target.removeClass("active").slideUp()):(o.removeClass("active").slideUp(),$this.addClass("active"),$target.addClass("active").slideDown()),!1})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
